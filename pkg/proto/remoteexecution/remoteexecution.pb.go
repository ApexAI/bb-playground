// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/proto/remoteexecution/remoteexecution.proto

package remoteexecution

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	PlatformPkixPublicKey  []byte                 `protobuf:"bytes,1,opt,name=platform_pkix_public_key,json=platformPkixPublicKey,proto3" json:"platform_pkix_public_key,omitempty"`
	ClientCertificateChain [][]byte               `protobuf:"bytes,2,rep,name=client_certificate_chain,json=clientCertificateChain,proto3" json:"client_certificate_chain,omitempty"`
	Nonce                  []byte                 `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AdditionalData         *Action_AdditionalData `protobuf:"bytes,4,opt,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty"`
	Ciphertext             []byte                 `protobuf:"bytes,5,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{0}
}

func (x *Action) GetPlatformPkixPublicKey() []byte {
	if x != nil {
		return x.PlatformPkixPublicKey
	}
	return nil
}

func (x *Action) GetClientCertificateChain() [][]byte {
	if x != nil {
		return x.ClientCertificateChain
	}
	return nil
}

func (x *Action) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Action) GetAdditionalData() *Action_AdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

func (x *Action) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type ExecuteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        *Action                `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Priority      int32                  `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{1}
}

func (x *ExecuteRequest) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ExecuteRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type WaitExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitExecutionRequest) Reset() {
	*x = WaitExecutionRequest{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitExecutionRequest) ProtoMessage() {}

func (x *WaitExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitExecutionRequest.ProtoReflect.Descriptor instead.
func (*WaitExecutionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{2}
}

func (x *WaitExecutionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExecutionEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         []byte                 `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Ciphertext    []byte                 `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionEvent) Reset() {
	*x = ExecutionEvent{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionEvent) ProtoMessage() {}

func (x *ExecutionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionEvent.ProtoReflect.Descriptor instead.
func (*ExecutionEvent) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutionEvent) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *ExecutionEvent) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type ExecuteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Stage:
	//
	//	*ExecuteResponse_Queued_
	//	*ExecuteResponse_Executing_
	//	*ExecuteResponse_Completed_
	Stage         isExecuteResponse_Stage `protobuf_oneof:"stage"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecuteResponse) GetStage() isExecuteResponse_Stage {
	if x != nil {
		return x.Stage
	}
	return nil
}

func (x *ExecuteResponse) GetQueued() *ExecuteResponse_Queued {
	if x != nil {
		if x, ok := x.Stage.(*ExecuteResponse_Queued_); ok {
			return x.Queued
		}
	}
	return nil
}

func (x *ExecuteResponse) GetExecuting() *ExecuteResponse_Executing {
	if x != nil {
		if x, ok := x.Stage.(*ExecuteResponse_Executing_); ok {
			return x.Executing
		}
	}
	return nil
}

func (x *ExecuteResponse) GetCompleted() *ExecuteResponse_Completed {
	if x != nil {
		if x, ok := x.Stage.(*ExecuteResponse_Completed_); ok {
			return x.Completed
		}
	}
	return nil
}

type isExecuteResponse_Stage interface {
	isExecuteResponse_Stage()
}

type ExecuteResponse_Queued_ struct {
	Queued *ExecuteResponse_Queued `protobuf:"bytes,2,opt,name=queued,proto3,oneof"`
}

type ExecuteResponse_Executing_ struct {
	Executing *ExecuteResponse_Executing `protobuf:"bytes,3,opt,name=executing,proto3,oneof"`
}

type ExecuteResponse_Completed_ struct {
	Completed *ExecuteResponse_Completed `protobuf:"bytes,4,opt,name=completed,proto3,oneof"`
}

func (*ExecuteResponse_Queued_) isExecuteResponse_Stage() {}

func (*ExecuteResponse_Executing_) isExecuteResponse_Stage() {}

func (*ExecuteResponse_Completed_) isExecuteResponse_Stage() {}

type Action_AdditionalData struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StableFingerprint []byte                 `protobuf:"bytes,1,opt,name=stable_fingerprint,json=stableFingerprint,proto3" json:"stable_fingerprint,omitempty"`
	ExecutionTimeout  *durationpb.Duration   `protobuf:"bytes,2,opt,name=execution_timeout,json=executionTimeout,proto3" json:"execution_timeout,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Action_AdditionalData) Reset() {
	*x = Action_AdditionalData{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action_AdditionalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_AdditionalData) ProtoMessage() {}

func (x *Action_AdditionalData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_AdditionalData.ProtoReflect.Descriptor instead.
func (*Action_AdditionalData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Action_AdditionalData) GetStableFingerprint() []byte {
	if x != nil {
		return x.StableFingerprint
	}
	return nil
}

func (x *Action_AdditionalData) GetExecutionTimeout() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTimeout
	}
	return nil
}

type ExecuteResponse_Queued struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteResponse_Queued) Reset() {
	*x = ExecuteResponse_Queued{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse_Queued) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse_Queued) ProtoMessage() {}

func (x *ExecuteResponse_Queued) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse_Queued.ProtoReflect.Descriptor instead.
func (*ExecuteResponse_Queued) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{4, 0}
}

type ExecuteResponse_Executing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastEvent     *ExecutionEvent        `protobuf:"bytes,1,opt,name=last_event,json=lastEvent,proto3" json:"last_event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteResponse_Executing) Reset() {
	*x = ExecuteResponse_Executing{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse_Executing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse_Executing) ProtoMessage() {}

func (x *ExecuteResponse_Executing) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse_Executing.ProtoReflect.Descriptor instead.
func (*ExecuteResponse_Executing) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ExecuteResponse_Executing) GetLastEvent() *ExecutionEvent {
	if x != nil {
		return x.LastEvent
	}
	return nil
}

type ExecuteResponse_Completed struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CompletionEvent *ExecutionEvent        `protobuf:"bytes,1,opt,name=completion_event,json=completionEvent,proto3" json:"completion_event,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExecuteResponse_Completed) Reset() {
	*x = ExecuteResponse_Completed{}
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse_Completed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse_Completed) ProtoMessage() {}

func (x *ExecuteResponse_Completed) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse_Completed.ProtoReflect.Descriptor instead.
func (*ExecuteResponse_Completed) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP(), []int{4, 2}
}

func (x *ExecuteResponse_Completed) GetCompletionEvent() *ExecutionEvent {
	if x != nil {
		return x.CompletionEvent
	}
	return nil
}

var File_pkg_proto_remoteexecution_remoteexecution_proto protoreflect.FileDescriptor

var file_pkg_proto_remoteexecution_remoteexecution_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x03, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x70, 0x6b, 0x69, 0x78, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x50, 0x6b, 0x69, 0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x38,
	0x0a, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x57,
	0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a,
	0x61, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x87, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x65, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x57, 0x61, 0x69, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0xe1, 0x03, 0x0a,
	0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x12,
	0x52, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x1a, 0x08, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x1a, 0x53, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x46,
	0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x5f, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x32, 0xd7, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e,
	0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x62, 0x6f, 0x6e, 0x61,
	0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x6a,
	0x0a, 0x0d, 0x57, 0x61, 0x69, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61,
	0x72, 0x6e, 0x2f, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescOnce sync.Once
	file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescData []byte
)

func file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescGZIP() []byte {
	file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescOnce.Do(func() {
		file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_remoteexecution_remoteexecution_proto_rawDesc), len(file_pkg_proto_remoteexecution_remoteexecution_proto_rawDesc)))
	})
	return file_pkg_proto_remoteexecution_remoteexecution_proto_rawDescData
}

var file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_proto_remoteexecution_remoteexecution_proto_goTypes = []any{
	(*Action)(nil),                    // 0: bonanza.remoteexecution.Action
	(*ExecuteRequest)(nil),            // 1: bonanza.remoteexecution.ExecuteRequest
	(*WaitExecutionRequest)(nil),      // 2: bonanza.remoteexecution.WaitExecutionRequest
	(*ExecutionEvent)(nil),            // 3: bonanza.remoteexecution.ExecutionEvent
	(*ExecuteResponse)(nil),           // 4: bonanza.remoteexecution.ExecuteResponse
	(*Action_AdditionalData)(nil),     // 5: bonanza.remoteexecution.Action.AdditionalData
	(*ExecuteResponse_Queued)(nil),    // 6: bonanza.remoteexecution.ExecuteResponse.Queued
	(*ExecuteResponse_Executing)(nil), // 7: bonanza.remoteexecution.ExecuteResponse.Executing
	(*ExecuteResponse_Completed)(nil), // 8: bonanza.remoteexecution.ExecuteResponse.Completed
	(*durationpb.Duration)(nil),       // 9: google.protobuf.Duration
}
var file_pkg_proto_remoteexecution_remoteexecution_proto_depIdxs = []int32{
	5,  // 0: bonanza.remoteexecution.Action.additional_data:type_name -> bonanza.remoteexecution.Action.AdditionalData
	0,  // 1: bonanza.remoteexecution.ExecuteRequest.action:type_name -> bonanza.remoteexecution.Action
	6,  // 2: bonanza.remoteexecution.ExecuteResponse.queued:type_name -> bonanza.remoteexecution.ExecuteResponse.Queued
	7,  // 3: bonanza.remoteexecution.ExecuteResponse.executing:type_name -> bonanza.remoteexecution.ExecuteResponse.Executing
	8,  // 4: bonanza.remoteexecution.ExecuteResponse.completed:type_name -> bonanza.remoteexecution.ExecuteResponse.Completed
	9,  // 5: bonanza.remoteexecution.Action.AdditionalData.execution_timeout:type_name -> google.protobuf.Duration
	3,  // 6: bonanza.remoteexecution.ExecuteResponse.Executing.last_event:type_name -> bonanza.remoteexecution.ExecutionEvent
	3,  // 7: bonanza.remoteexecution.ExecuteResponse.Completed.completion_event:type_name -> bonanza.remoteexecution.ExecutionEvent
	1,  // 8: bonanza.remoteexecution.Execution.Execute:input_type -> bonanza.remoteexecution.ExecuteRequest
	2,  // 9: bonanza.remoteexecution.Execution.WaitExecution:input_type -> bonanza.remoteexecution.WaitExecutionRequest
	4,  // 10: bonanza.remoteexecution.Execution.Execute:output_type -> bonanza.remoteexecution.ExecuteResponse
	4,  // 11: bonanza.remoteexecution.Execution.WaitExecution:output_type -> bonanza.remoteexecution.ExecuteResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_proto_remoteexecution_remoteexecution_proto_init() }
func file_pkg_proto_remoteexecution_remoteexecution_proto_init() {
	if File_pkg_proto_remoteexecution_remoteexecution_proto != nil {
		return
	}
	file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes[4].OneofWrappers = []any{
		(*ExecuteResponse_Queued_)(nil),
		(*ExecuteResponse_Executing_)(nil),
		(*ExecuteResponse_Completed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_remoteexecution_remoteexecution_proto_rawDesc), len(file_pkg_proto_remoteexecution_remoteexecution_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_remoteexecution_remoteexecution_proto_goTypes,
		DependencyIndexes: file_pkg_proto_remoteexecution_remoteexecution_proto_depIdxs,
		MessageInfos:      file_pkg_proto_remoteexecution_remoteexecution_proto_msgTypes,
	}.Build()
	File_pkg_proto_remoteexecution_remoteexecution_proto = out.File
	file_pkg_proto_remoteexecution_remoteexecution_proto_goTypes = nil
	file_pkg_proto_remoteexecution_remoteexecution_proto_depIdxs = nil
}
