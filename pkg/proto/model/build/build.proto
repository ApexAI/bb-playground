syntax = "proto3";

package buildbarn.playground.model.build;

import "google/protobuf/duration.proto";
import "pkg/proto/model/core/core.proto";
import "pkg/proto/model/encoding/encoding.proto";
import "pkg/proto/model/filesystem/filesystem.proto";

option go_package = "github.com/buildbarn/bb-playground/pkg/proto/model/build";

message Module {
  // The name of the module for which source code is provided, without
  // the leading "@" (e.g., "rules_go").
  string name = 1;

  // Reference to a Directory message that describes the root directory
  // of this module. The root directory MUST contain a file named
  // "MODULE.bazel". It MUST NOT contain any symbolic links whose
  // targets escape the root directory (i.e.,
  // maximum_symlink_escapement_levels MUST be zero).
  buildbarn.playground.model.filesystem.DirectoryReference
      root_directory_reference = 2;
}

message UseLockfile {
  // If set and any information is missing or out-of-date, the build
  // will fail with an error. This mode never changes the lockfile or
  // performs network requests during resolution. Module extensions that
  // marked themselves as reproducible may still perform network
  // requests, but are expected to always produce the same result.
  bool error = 1;

  // If set, mutable information is refreshed if its age exceeds the
  // provided amount of time.
  google.protobuf.Duration maximum_cache_duration = 2;
}

message BuildSpecification {
  // Non-empty list of modules for which explicit copies of source code
  // are provided.
  repeated Module modules = 1;

  // The name of the module whose MODULE.bazel file should be treated as
  // the root for the sake of resolving dependencies. Any calls to
  // archive_override(), git_override(), multiple_version_override(), or
  // single_version_override() in MODULE.bazel files other than the one
  // belonging to the root module are ignored.
  string root_module_name = 2;

  // Patterns of targets that should be built.
  //
  // TODO: Must target names be provided in canonical form?
  repeated string target_patterns = 3;

  // Parameters that the client used to create objects containing
  // Directory and Leaves messages. The server MUST also use these
  // parameters when creating output directories.
  buildbarn.playground.model.filesystem.DirectoryCreationParameters
      directory_creation_parameters = 4;

  // Parameters that the client used to create objects containing
  // FileContentsList messages and file chunks. The server MUST also use
  // these parameters when creating output files.
  buildbarn.playground.model.filesystem.FileCreationParameters
      file_creation_parameters = 5;

  // Whether or not to use the MODULE.bazel.lock file that is part of
  // the root module. If not set, the lockfile is neither checked nor
  // updated.
  UseLockfile use_lockfile = 6;

  // URLs of registries to use to locate Bazel module dependencies. The
  // order is important: modules will be looked up in earlier registries
  // first, and only fall back to later registries when they're missing
  // from the earlier ones.
  repeated string module_registry_urls = 7;

  // Whether to ignore `bazel_dep` and `use_extension` declared as
  // `dev_dependency` in the MODULE.bazel of the root module. Note that
  // such dependencies are always ignored in the MODULE.bazel file of
  // modules other than the root module.
  bool ignore_root_module_dev_dependencies = 8;

  // Names of modules containing Starlark code that needs to be
  // preloaded.
  //
  // TODO: This feature is only present to aid development, and should
  // be removed at some point.
  repeated string builtins_module_names = 9;

  // Apparent label of the platform() that should be used for executing
  // commands as part of module extensions and repository rules. The
  // label is assumed to be relative to the root package of the root
  // module.
  //
  // If this field is not set, the build will be unable to evaluate
  // module extensions and repository rules.
  string repo_platform = 10;

  // Encoders that should be used when creating Command messages that
  // are processed by workers.
  repeated buildbarn.playground.model.encoding.BinaryEncoder command_encoders =
      11;
}
