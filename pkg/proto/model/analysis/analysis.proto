syntax = "proto3";

package buildbarn.playground.model.analysis;

import "google/protobuf/empty.proto";
import "pkg/proto/model/build/build.proto";
import "pkg/proto/model/core/core.proto";
import "pkg/proto/model/filesystem/filesystem.proto";
import "pkg/proto/model/starlark/starlark.proto";

option go_package = "github.com/buildbarn/bb-playground/pkg/proto/model/analysis";

message BuildSpecification {
  message Key {}

  message Value {
    buildbarn.playground.model.build.BuildSpecification build_specification = 1;
  }
}

message BuiltinsModuleNames {
  message Key {}

  message Value {
    repeated string builtins_module_names = 1;
  }
}

message BuildResult {
  message Key {}

  message Value {
    oneof result {
      google.protobuf.Empty success = 1;
      string failure = 2;
    }
  }
}

// CanonicalRepoName resolves the canonical name of a repo, given its
// apparent name and the name of the repo which attempts to access it.
message CanonicalRepoName {
  message Key {
    // The canonical name of the repo from which the apparent repo is
    // being accessed.
    string from_canonical_repo = 1;

    // The apparent name of the repo which is being accessed.
    string to_apparent_repo = 2;
  }

  message Value {
    oneof result {
      // The resolved canonical name of the repo which is being accessed.
      string to_canonical_repo = 1;

      // Resolution failed.
      string failure = 2;
    }
  }
}

message CompiledBzlFile {
  message Key {
    // The label of the .bzl file. The label MUST include a canonical
    // repo name.
    string label = 1;

    repeated string builtins_module_names = 2;
  }

  message Value {
    oneof result {
      buildbarn.playground.model.starlark.CompiledProgram compiled_program = 1;
      string failure = 2;
    }
  }
}

message CompiledBzlFileFunctions {
  message Key {
    // The label of the .bzl file. The label MUST include a canonical
    // repo name.
    string label = 1;

    repeated string builtins_module_names = 2;
  }
}

message CompiledBzlFileGlobals {
  message Key {
    // The label of the .bzl file. The label MUST include a canonical
    // repo name.
    string label = 1;

    repeated string builtins_module_names = 2;
  }
}

message ConfiguredTarget {
  message Key {
    // The label of the package. The label MUST include a canonical repo
    // name, and MUST NOT include a target name if it matches the last
    // component of the package path.
    string label = 1;
  }

  message Value {
    oneof result {
      google.protobuf.Empty success = 1;
      string failure = 2;
    }
  }
}

message DirectoryAccessParameters {
  message Key {}

  message Value {
    buildbarn.playground.model.filesystem.DirectoryAccessParameters
        directory_access_parameters = 1;
  }
}

message FileAccessParameters {
  message Key {}

  message Value {
    buildbarn.playground.model.filesystem.FileAccessParameters
        file_access_parameters = 1;
  }
}

message FileProperties {
  message Key {
    // The canonical name of the repo that contains the file whose
    // properties are being requested.
    string canonical_repo = 1;

    // Path of the files whose properties are being requested, relative
    // to the root of the repo. The path MUST NOT contain "." or ".."
    // components. It also MUST NOT contain leading, trailing, or
    // redundant slashes.
    string path = 2;
  }

  message Value {
    oneof result {
      // If set, the file exists, and its properties are provided.
      buildbarn.playground.model.filesystem.FileProperties exists = 1;

      // If set, the file or any of its parent directories does not
      // exist.
      google.protobuf.Empty does_not_exist = 2;

      string failure = 3;
    }
  }
}

message FileReader {
  message Key {}
}

message Package {
  message Key {
    // The label of the package. The label MUST include a canonical repo
    // name, and MUST NOT include a target name.
    string label = 1;
  }

  message Value {
    message Success {
      message TargetList {
        message Element {
          message Parent {
            // Reference to an object of type TargetList that contains
            // properties of targets in the package.
            buildbarn.playground.model.core.Reference reference = 1;

            // The name of the first target contained in this B-tree.
            // This field can be used to efficiently look up targets
            // contained in the B-tree.
            string first_name = 2;
          }

          oneof level {
            // Properties of a single target.
            buildbarn.playground.model.starlark.Target leaf = 1;

            // More targets are stored in another object.
            Parent parent = 2;
          }
        }

        repeated Element elements = 1;
      }

      // B-tree of targets contained within the package. Targets are
      // sorted by name.
      repeated TargetList.Element targets = 1;
    }

    oneof result {
      // Successfully processed the package's BUILD.bazel file, and
      // extracted the targets contained within.
      Success success = 1;

      // Failed to processed the package's BUILD.bazel file or one of
      // its dependencies.
      string failure = 2;
    }
  }
}

message Repo {
  message Key {
    // The canonical name of the repo whose file contents are being
    // requested.
    string canonical_repo = 1;
  }

  message Value {
    oneof result {
      // The repository was obtained successfully. The root directory,
      // containing the files in the repository is provided.
      buildbarn.playground.model.core.Reference root_directory_reference = 1;

      // Failed to obtain files belonging to the repository.
      string failure = 2;
    }
  }
}

message RepoDefaultAttrs {
  message Key {
    // The canonical name of the repo for which the defaults specified
    // in REPO.bazel are requested.
    string canonical_repo = 1;
  }

  message Value {
    oneof result {
      // Default values of attributes that need to be attached to all
      // targets in this repo.
      buildbarn.playground.model.starlark.InheritableAttrs success = 1;

      // Failed to obtain default values of attributes.
      string failure = 2;
    }
  }
}

message TargetCompletion {
  message Key {
    // The label of the package. The label MUST include a canonical repo
    // name, and MUST NOT include a target name if it matches the last
    // component of the package path.
    string label = 1;
  }

  message Value {
    oneof result {
      google.protobuf.Empty success = 1;
      string failure = 2;
    }
  }
}
