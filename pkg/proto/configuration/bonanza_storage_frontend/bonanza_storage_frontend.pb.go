// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/proto/configuration/bonanza_storage_frontend/bonanza_storage_frontend.proto

package bonanza_storage_frontend

import (
	global "github.com/buildbarn/bb-storage/pkg/proto/configuration/global"
	grpc "github.com/buildbarn/bb-storage/pkg/proto/configuration/grpc"
	object "github.com/buildbarn/bonanza/pkg/proto/storage/object"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationConfiguration struct {
	state                          protoimpl.MessageState                     `protogen:"open.v1"`
	Global                         *global.Configuration                      `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	GrpcServers                    []*grpc.ServerConfiguration                `protobuf:"bytes,2,rep,name=grpc_servers,json=grpcServers,proto3" json:"grpc_servers,omitempty"`
	ObjectStoreConcurrency         int64                                      `protobuf:"varint,3,opt,name=object_store_concurrency,json=objectStoreConcurrency,proto3" json:"object_store_concurrency,omitempty"`
	MaximumUnfinalizedDagsCount    uint32                                     `protobuf:"varint,4,opt,name=maximum_unfinalized_dags_count,json=maximumUnfinalizedDagsCount,proto3" json:"maximum_unfinalized_dags_count,omitempty"`
	MaximumUnfinalizedParentsLimit *object.Limit                              `protobuf:"bytes,5,opt,name=maximum_unfinalized_parents_limit,json=maximumUnfinalizedParentsLimit,proto3" json:"maximum_unfinalized_parents_limit,omitempty"`
	ShardsReplicaA                 map[string]*ApplicationConfiguration_Shard `protobuf:"bytes,6,rep,name=shards_replica_a,json=shardsReplicaA,proto3" json:"shards_replica_a,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ShardsReplicaB                 map[string]*ApplicationConfiguration_Shard `protobuf:"bytes,7,rep,name=shards_replica_b,json=shardsReplicaB,proto3" json:"shards_replica_b,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ApplicationConfiguration) Reset() {
	*x = ApplicationConfiguration{}
	mi := &file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfiguration) ProtoMessage() {}

func (x *ApplicationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConfiguration.ProtoReflect.Descriptor instead.
func (*ApplicationConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationConfiguration) GetGlobal() *global.Configuration {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *ApplicationConfiguration) GetGrpcServers() []*grpc.ServerConfiguration {
	if x != nil {
		return x.GrpcServers
	}
	return nil
}

func (x *ApplicationConfiguration) GetObjectStoreConcurrency() int64 {
	if x != nil {
		return x.ObjectStoreConcurrency
	}
	return 0
}

func (x *ApplicationConfiguration) GetMaximumUnfinalizedDagsCount() uint32 {
	if x != nil {
		return x.MaximumUnfinalizedDagsCount
	}
	return 0
}

func (x *ApplicationConfiguration) GetMaximumUnfinalizedParentsLimit() *object.Limit {
	if x != nil {
		return x.MaximumUnfinalizedParentsLimit
	}
	return nil
}

func (x *ApplicationConfiguration) GetShardsReplicaA() map[string]*ApplicationConfiguration_Shard {
	if x != nil {
		return x.ShardsReplicaA
	}
	return nil
}

func (x *ApplicationConfiguration) GetShardsReplicaB() map[string]*ApplicationConfiguration_Shard {
	if x != nil {
		return x.ShardsReplicaB
	}
	return nil
}

type ApplicationConfiguration_Shard struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Client        *grpc.ClientConfiguration `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Weight        uint32                    `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationConfiguration_Shard) Reset() {
	*x = ApplicationConfiguration_Shard{}
	mi := &file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationConfiguration_Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfiguration_Shard) ProtoMessage() {}

func (x *ApplicationConfiguration_Shard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConfiguration_Shard.ProtoReflect.Descriptor instead.
func (*ApplicationConfiguration_Shard) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ApplicationConfiguration_Shard) GetClient() *grpc.ClientConfiguration {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ApplicationConfiguration_Shard) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

var File_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto protoreflect.FileDescriptor

var file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDesc = string([]byte{
	0x0a, 0x4f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a,
	0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2f, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x1a, 0x2b, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6,
	0x08, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x06, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x12, 0x54, 0x0a, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x72, 0x70,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x43, 0x0a, 0x1e, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x75, 0x6e,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x67, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x55, 0x6e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x61,
	0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x68, 0x0a, 0x21, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x75, 0x6e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x1e, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x55, 0x6e, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x62,
	0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x41, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x41, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x62, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x6f,
	0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x42, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x42, 0x1a, 0x6a, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x49, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a,
	0x91, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x41, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x64, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e,
	0x7a, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x91, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x42, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x64, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x62,
	0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2f,
	0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x62, 0x6f, 0x6e, 0x61, 0x6e, 0x7a, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescOnce sync.Once
	file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescData []byte
)

func file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescGZIP() []byte {
	file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescOnce.Do(func() {
		file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDesc), len(file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDesc)))
	})
	return file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDescData
}

var file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_goTypes = []any{
	(*ApplicationConfiguration)(nil),       // 0: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration
	(*ApplicationConfiguration_Shard)(nil), // 1: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.Shard
	nil,                                    // 2: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.ShardsReplicaAEntry
	nil,                                    // 3: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.ShardsReplicaBEntry
	(*global.Configuration)(nil),           // 4: buildbarn.configuration.global.Configuration
	(*grpc.ServerConfiguration)(nil),       // 5: buildbarn.configuration.grpc.ServerConfiguration
	(*object.Limit)(nil),                   // 6: bonanza.storage.object.Limit
	(*grpc.ClientConfiguration)(nil),       // 7: buildbarn.configuration.grpc.ClientConfiguration
}
var file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_depIdxs = []int32{
	4, // 0: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.global:type_name -> buildbarn.configuration.global.Configuration
	5, // 1: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.grpc_servers:type_name -> buildbarn.configuration.grpc.ServerConfiguration
	6, // 2: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.maximum_unfinalized_parents_limit:type_name -> bonanza.storage.object.Limit
	2, // 3: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.shards_replica_a:type_name -> bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.ShardsReplicaAEntry
	3, // 4: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.shards_replica_b:type_name -> bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.ShardsReplicaBEntry
	7, // 5: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.Shard.client:type_name -> buildbarn.configuration.grpc.ClientConfiguration
	1, // 6: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.ShardsReplicaAEntry.value:type_name -> bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.Shard
	1, // 7: bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.ShardsReplicaBEntry.value:type_name -> bonanza.configuration.bonanza_storage_frontend.ApplicationConfiguration.Shard
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() {
	file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_init()
}
func file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_init() {
	if File_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDesc), len(file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_goTypes,
		DependencyIndexes: file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_depIdxs,
		MessageInfos:      file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_msgTypes,
	}.Build()
	File_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto = out.File
	file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_goTypes = nil
	file_pkg_proto_configuration_bonanza_storage_frontend_bonanza_storage_frontend_proto_depIdxs = nil
}
